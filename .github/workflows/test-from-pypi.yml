name: Test installation from PyPI

on:
  workflow_dispatch:
  schedule:
    # Run at 03:27 UTC on the 8th and 22nd of every month
    - cron: '27 3 8,22 * *'

jobs:
  # test-pypi-sdist:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
  #       python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
  #       python-architecture: [x86, x64, arm64]
  #       exclude:
  #       - os: macos-latest
  #         python-architecture: x86
  #       - os: macos-latest
  #         python-architecture: x64
  #       - os: macos-13
  #         python-architecture: x86
  #       - os: macos-13
  #         python-architecture: arm64
  #       - os: ubuntu-latest
  #         python-architecture: x86

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #   - name: Set up Python ${{ matrix.python-version }} (${{ matrix.python-architecture }})
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #       architecture: ${{ matrix.python-architecture }}
  #       allow-prereleases: true
  #   - name: Install test dependencies and Traits from PyPI sdist
  #     run: |
  #       python -m pip install --no-binary traits numpy setuptools Sphinx traits traitsui
  #   - name: Create clean test directory
  #     run: |
  #       mkdir testdir
  #   - name: Test Traits package
  #     run: cd testdir && python -m unittest discover -v traits

  test-pypi-wheel:
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        include:
        - os: windows-latest
          python-architecture: x86
        - os: windows-latest
          python-architecture: x64
        - os: ubuntu-latest
          python-architecture: x86
        - os: ubuntu-latest
          python-architecture: x64
        - os: macos-latest
          python-architecture: arm64
        - os: macos-13
          python-architecture: x64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Set up Python ${{ matrix.python-version }} (${{ matrix.python-architecture }})
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-architecture }}
        allow-prereleases: true
    - name: Install test dependencies and Traits from PyPI wheel
      run: |
        python -m pip install --only-binary traits numpy setuptools Sphinx traits traitsui
    - name: Create clean test directory
      run: |
        mkdir testdir
    - name: Test Traits package
      run: cd testdir && python -m unittest discover -v traits
