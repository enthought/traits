name: Publish release to PyPI

on:
  release:
    types: [published]

jobs:
  build-sdist:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the release commit
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Python packages needed for sdist build and upload
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install twine
    - name: Build sdist
      run: |
        python setup.py sdist
    - name: Publish sdist to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m twine check --strict dist/*.tar.gz
        python -m twine upload dist/*.tar.gz

  build-wheel-windows-macos:

    strategy:
      # Build on 32-bit and 64-bit Windows, and 64-bit macOS
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        python-architecture: [x86, x64]
        exclude:
          - os: macos-latest
            python-architecture: x86

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out the release commit
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} (${{ matrix.python-architecture }})
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-architecture }}
    - name: Install Python packages needed for wheel build and upload
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install twine wheel
    - name: Build wheel
      run: |
        python -m pip wheel --no-deps -w ./dist .
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m twine check --strict dist/*.whl
        python -m twine upload dist/*.whl

  build-wheel-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the release commit
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Python packages needed for wheel upload
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install twine
    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.3.3
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m twine check --strict dist/*-manylinux*.whl
        python -m twine upload dist/*-manylinux*.whl

  build-wheel-linux-aarch64:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the release commit
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Install Python packages needed for wheel upload
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install twine
    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2014_aarch64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m twine check --strict dist/*-manylinux*.whl
        python -m twine upload dist/*-manylinux*.whl
